{"version":3,"sources":["images/logo.png","components/Login.js","functions/generateRandomString.js","components/Playlist.js","components/Playlists.js","components/SearchBar.js","components/User.js","components/Menu.js","components/NotFound.js","functions/getHashParams.js","components/App.js","index.js"],"names":["Login","state","length","text","possible","i","charAt","Math","floor","random","generateRandomString","url","encodeURIComponent","process","join","window","location","id","role","aria-label","className","onClick","login","href","alt","src","logo","Component","spotifyWebApi","Spotify","Playlist","props","shuffling","this","fetchNewArt","setState","playlist","tracks","total","swapInterval","setInterval","j","swap","clearInterval","to","from","reorderTracksInPlaylist","catch","err","response","JSON","parse","console","error","name","images","height","external_urls","spotify","disabled","shufflePlaylist","Playlists","index","playlists","bind","getUserPlaylists","then","res","items","filter","owner","userId","getPlaylist","fields","swappedPlaylists","findIndex","filteredPlaylists","toLocaleLowerCase","includes","query","map","SearchBar","handleChange","e","target","value","propagateQuery","type","onChange","placeholder","User","userImg","user","display_name","Menu","getMe","params","NotFound","getHashParams","hashParams","r","q","hash","substring","exec","decodeURIComponent","App","access_token","setAccessToken","basename","exact","path","component","render","require","config","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c98640bc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.b1cdd032.png\";","import React, { Component } from 'react';\nimport generateRandomString from '../functions/generateRandomString';\nimport './Login.css';\nimport logo from '../images/logo.png';\n\nclass Login extends Component {\n  login() {\n    const clientId = process.env.REACT_APP_CLIENT_ID;\n    const redirectUri = process.env.NODE_ENV === 'development' ? process.env.REACT_APP_REDIRECT_URI_DEV : process.env.REACT_APP_REDIRECT_URI_PROD;\n    const scope =\n      ['playlist-read-private',\n        'playlist-modify-public',\n        'playlist-modify-private'];\n    const state = generateRandomString(16);\n    const url = 'https://accounts.spotify.com/authorize'\n      + '?response_type=token'\n      + '&client_id=' + encodeURIComponent(clientId)\n      + '&scope=' + encodeURIComponent(scope.join(' '))\n      + '&redirect_uri=' + encodeURIComponent(redirectUri)\n      + '&state=' + encodeURIComponent(state);\n\n    window.location = url;\n  }\n\n  render() {\n    return (\n      <div id='background'>\n        <div id='text-container'>\n          <span id='welcome'><span role='img' aria-label='Hand wave'>ðŸ‘‹</span>&nbsp;&nbsp;Hey there, welcome to Shuffly</span>\n          <span id='description'>Shuffly is a service that directly accesses your Spotify playlists to randomly reorder the tracks on them in place</span>\n          <div id='button-container'>\n            <button className='SpotifyButton' onClick={() => this.login()}>LOG IN WITH SPOTIFY</button>\n            <span id='powered-by'>Powered by Spotify API</span>\n            <span id='github'><a href='https://github.com/dvd-z/shuffly'>Check out the code on GitHub</a></span>\n          </div>\n        </div>\n        <div id='img-wrapper'>\n          <img alt='Shuffly logo' id='logo' src={logo}></img>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;","export default function generateRandomString(length) {\n    var text = '';\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (var i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n}\n","import React, { Component } from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport './Playlist.css';\n\nconst spotifyWebApi = new Spotify();\n\nclass Playlist extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      shuffling: false\n    };\n  }\n\n  fetchNewArt(id) {\n    this.props.fetchNewArt(id);\n  }\n\n  shufflePlaylist() {\n    this.setState({\n      shuffling: true\n    });\n\n    let i = this.props.playlist.tracks.total - 1;\n\n    let swapInterval = setInterval(() => {\n      const j = Math.floor(Math.random() * (i + 1));\n      this.swap(i, j);\n\n      i--;\n\n      if (i <= 0) {\n        clearInterval(swapInterval);\n\n        this.fetchNewArt(this.props.id);\n        this.setState({\n          shuffling: false\n        });\n      }\n    }, 125);\n  }\n\n  swap(to, from) {\n    spotifyWebApi\n      .reorderTracksInPlaylist(this.props.playlist.id, from, to + 1)\n      .catch(err => {\n        const response = JSON.parse(err.response);\n        console.error(response.error);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <div id='playlist-container'>\n          <div id='playlist-metadata'>\n            <img id='playlist-art' alt={this.props.playlist.name + ' album art'}\n              src={this.props.playlist.images?.[0]?.url ?? 'data:,'} height='64'>\n            </img>\n            <span id='playlist-descriptions'>\n              <span id='playlist-title'>\n                <a id='playlist-link'\n                  href={this.props.playlist.external_urls.spotify}>{this.props.playlist.name}\n                </a>\n              </span>\n              <div id='playlist-songs-container'>\n                <span id='playlist-songs'>{this.props.playlist.tracks.total}\n                </span>\n                <span id='songs-text'>&nbsp;songs</span>\n              </div>\n            </span>\n          </div>\n          <button id='playlist-shuffle' disabled={this.state.shuffling} className='SpotifyButton ShuffleButton'\n            onClick={() => this.shufflePlaylist()}>{this.state.shuffling ? 'SHUFFLING...' : 'SHUFFLE'}\n          </button>\n        </div>\n        <hr></hr>\n      </div>\n    );\n  }\n}\n\nexport default Playlist;","import React, { Component } from 'react';\nimport './Playlists.css';\nimport Playlist from './Playlist';\nimport Spotify from 'spotify-web-api-js';\n\nconst spotifyWebApi = new Spotify();\n\nclass Playlists extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      index: 0,\n      playlists: []\n    };\n\n    this.fetchNewArt = this.fetchNewArt.bind(this);\n  }\n\n  componentDidMount() {\n    spotifyWebApi.getUserPlaylists({ index: this.state.index })\n      .then(res =>\n        this.setState({\n          playlists: res.items.filter(playlist =>\n            playlist.owner.id === this.props.userId\n          )\n        })\n      )\n      .catch(err => {\n        const response = JSON.parse(err.response);\n        console.error(response.error);\n      });\n  }\n\n  fetchNewArt(id) {\n    const options = {\n      fields: 'images'\n    };\n\n    spotifyWebApi.getPlaylist(id, options)\n      .then(res => {\n        let swappedPlaylists = this.state.playlists;\n        swappedPlaylists[this.state.playlists.findIndex(\n          playlist => playlist.id === id\n        )].images = res.images;\n        this.setState({\n          playlists: swappedPlaylists\n        });\n      })\n      .catch(err => {\n        const response = JSON.parse(err.response);\n        console.error(response.error);\n      });\n  }\n\n  render() {\n    const filteredPlaylists = this.state.playlists.filter(playlist =>\n      playlist.name.toLocaleLowerCase().includes(this.props.query.toLocaleLowerCase())\n    ).map(playlist =>\n      <Playlist\n        key={playlist.id}\n        fetchNewArt={this.fetchNewArt}\n        id={playlist.id}\n        playlist={playlist}\n      />\n    );\n\n    return (\n      <div id='playlists-container'>\n        <span id='your-playlists-wrapper'>\n          <h3 id='your-playlists'>Your Playlists</h3>\n        </span>\n        <div className='scroller'>\n          {filteredPlaylists}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Playlists;","import React, { Component } from 'react';\nimport './SearchBar.css';\n\nclass SearchBar extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      query: ''\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      query: e.target.value\n    });\n\n    this.props.propagateQuery(e.target.value);\n  }\n\n  render() {\n    return (\n      <div id='search-wrapper'>\n        <input className='search' type='text'\n          value={this.state.query} onChange={this.handleChange} placeholder='Search'>\n        </input>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;","import React, { Component } from 'react';\nimport './User.css';\n\nclass User extends Component {\n  render() {\n    if (!this.props.user) {\n      return null;\n    }\n\n    let userImg;\n\n    if (this.props.user.images?.[0]?.url) {\n      userImg = (\n        <img alt='Profile'\n          src={this.props.user.images[0].url} height='64'\n          id='display-picture'>\n        </img>\n      );\n    }\n\n    return (\n      <div id='user-container'>\n        {userImg}\n        <p>{this.props.user.display_name}</p>\n      </div>\n    );\n  }\n}\n\nexport default User;","import React, { Component } from 'react';\nimport Playlists from './Playlists';\nimport SearchBar from './SearchBar';\nimport User from './User';\nimport './Menu.css';\nimport Spotify from 'spotify-web-api-js';\n\nconst spotifyWebApi = new Spotify();\n\nclass Menu extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      query: '',\n      user: null,\n    };\n\n    this.propagateQuery = this.propagateQuery.bind(this);\n  }\n\n  componentDidMount() {\n    spotifyWebApi.getMe()\n      .then(res => this.setState({ user: res }))\n      .catch(err => {\n        const response = JSON.parse(err.response);\n        console.error(response.error);\n      });\n  }\n\n  propagateQuery(query) {\n    this.setState({\n      query: query\n    })\n  }\n\n  render() {\n    return (\n      <div id='menu-container'>\n        <div id='header-container'>\n          <SearchBar propagateQuery={this.propagateQuery} query={this.state.query} />\n          <User user={this.state.user}></User>\n        </div>\n        <Playlists\n          params={this.props.params}\n          query={this.state.query}\n          userId={this.state.user?.id}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Menu;","import React from 'react'\n\nconst NotFound = () => <h1>Page not found</h1>\n\nexport default NotFound","export default function getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    // eslint-disable-next-line\n    while (e = r.exec(q)) {\n        hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n}\n","import React, { Component } from 'react';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\nimport './App.css';\nimport Login from './Login';\nimport Menu from './Menu';\nimport NotFound from './NotFound';\nimport getHashParams from '../functions/getHashParams';\nimport Spotify from 'spotify-web-api-js';\n\nconst spotifyWebApi = new Spotify();\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      params: getHashParams(),\n      query: '',\n    };\n\n    if (this.state.params.access_token) {\n      spotifyWebApi.setAccessToken(this.state.params.access_token);\n    }\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <div>\n            <Switch>\n              <Route exact path='/' component={Login} />\n              <Route exact path='/app' render={\n                (props) => <Menu {...props} params={this.state.params} query={this.state.query} />\n              } />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nrequire('dotenv').config();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}